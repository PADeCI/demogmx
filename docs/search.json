[{"path":"https://padeci.github.io/demogmx/articles/demogmx.html","id":"r-markdown","dir":"Articles","previous_headings":"","what":"R Markdown","title":"Introduction to demogmx","text":"R Markdown document. Markdown simple formatting syntax authoring HTML, PDF, MS Word documents. details using R Markdown see http://rmarkdown.rstudio.com. click Knit button document generated includes content well output embedded R code chunks within document. can embed R code chunk like :","code":"summary(cars) ##      speed           dist        ##  Min.   : 4.0   Min.   :  2.00   ##  1st Qu.:12.0   1st Qu.: 26.00   ##  Median :15.0   Median : 36.00   ##  Mean   :15.4   Mean   : 42.98   ##  3rd Qu.:19.0   3rd Qu.: 56.00   ##  Max.   :25.0   Max.   :120.00"},{"path":"https://padeci.github.io/demogmx/articles/demogmx.html","id":"including-plots","dir":"Articles","previous_headings":"","what":"Including Plots","title":"Introduction to demogmx","text":"can also embed plots, example:  Note echo = FALSE parameter added code chunk prevent printing R code generated plot.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"structure-of-the-app","dir":"Articles","previous_headings":"","what":"Structure of the app","title":"Shiny app","text":"shiny app execution appear new window tab browser. app three main areas: tabset panel - shows main divisions types demographic information available package. births, migration, population, mortality aging tabs available. selecting new tab shiny app show new page specific filters options, related selected type demographic data, appear. panel shown next figure area contained red rectangle sidebar panel - gives different options filters user must define order obtain specific visualizations data-sets. placed left side window. tab different sidebar panel options filters type demographic information unique characteristics. panel can seen next figure area contained green rectangle. main panel - contains area greater extent used visualize created graphs, based user specifications. part can scrolled order see different visualizations available tab. main panel area contained blue rectangle, following figure.  Now focus characteristics options tab offer.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"births-tab","dir":"Articles","previous_headings":"","what":"Births tab","title":"Shiny app","text":"tab provides birth visualizations data. get user define following parameters (numbers parentheses refer image end section): Select states (1). option allows user select states included graphs /downloadable data-sets. important note magnitudes state’s births can alter visualization certain graphs. Select years (2). range years included graphs data defined. forget read notes bottom sidebar panel. Female Male selected sex option, available years reduced 1985 2020 different data-set used. Select Sex (3). part, sex contained graphs downloadable data-set defined. saying, three possible options select: Female, Male Total. latter selected graphs show aggregated data sexes. user defined previous parameters, three different types graphs can created: number births (4) birth rate (5) sex proportion births (6) X-axis represent year data , ease visualization, vertical thicker gray lines placed years multiples five. Also, graphs, state unique color sex unique type line. obtain graphs, necessary click corresponding button. addition, births data-set can downloaded clicking Download data button (7). data filtered based specifications made user sidebar panel options. format downloadable file .zip within two .csv files, one based information Mexico’s National Council Population (CONAPO, ’s acronym Spanish) containing information provided National Institute Statistical Geographical data (INEGI, ’s acronym Spanish).  information information sources please check Get demographic data vignette.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"migration-tab","dir":"Articles","previous_headings":"","what":"Migration tab","title":"Shiny app","text":"tab two initial sets options. first set, user decide whether graph download selected data. three types migration Download data option. migration type selected, user allowed get plots related selected type migration Download data selected, possible migration parameters displayed user can filter data wished. second set optional displayed types migration selected. talk following.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"international-interstate-and-total-migration","dir":"Articles","previous_headings":"Migration tab","what":"International, Interstate and Total migration","title":"Shiny app","text":"three types migration available app: International, Interstate Total migration. Total migration aggregate two. Note Interstate migration selected National chosen State(s) parameter graphs blank country level international migration.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"by-year-or-by-age","dir":"Articles","previous_headings":"Migration tab > International, Interstate and Total migration","what":"By year or by age?","title":"Shiny app","text":"user defined type migration, second set options give possibility generate visualizations show data across multiple years (year) generate showing migration characteristics age based migration occurred single year (age). cases state(s) sex(es) shown visualization can defined user. year selected date option year range, otherwise, age chosen,date option become single year age option appear, option user must define age range migration population included graphs. matter type graph choose (year age) available set graphs . main difference X-axis graphs. year chosen, show selected years, choose age, show specified age range. Finally, plots allow graph immigration (arrivals), emigration (departures) net migration (difference immigration emigration). info can displayed raw number people showing rates relation population location, given rest parameters. two examples plots can displayed: number emigrants plot, selecting option year, show emigration state, across years.  number emigrants plot, selecting option age, show emigration state one year showing selected ages X-axis.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"download-data","dir":"Articles","previous_headings":"Migration tab","what":"Download data","title":"Shiny app","text":"fourth alternative first set options allows user download specified migration data. However, option types migration, states, years, sexes ages migration data, contained demogmx package, can selected. desired migration characteristics defined data can downloaded clicking Download data button bottom side bar panel Migration tab. data downloaded .csv file.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"population-tab","dir":"Articles","previous_headings":"","what":"Population tab","title":"Shiny app","text":"tab provides graphs data concerning population registered Mexico. initial sets options. first two define type graphs generated app last one allows download population data possible options available data. First, talk first two alternatives make visualizations.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"one-year-or-range-of-years","dir":"Articles","previous_headings":"Population tab","what":"One year or range of years?","title":"Shiny app","text":"two options allows user generate visualizations show data contained one single year (one year graphs) data across multiple years (year range graphs). cases state(s) sex(es) can defined user way. one year graphs chosen year selection made simple slider age ranges option available. year range graphs selected, user define minimum maximum value years used graphs year range option. Two types visualizations can generated options (one year range year graphs). graphs show size population sex proportion. However, way information presented different. data defined one year, X-axis graphs represent selected ages population. Instead, data includes multiple years, X-axis represent defined range years. ’s graph available one year graphs option: population pyramid. generate graph set states age range included graph must defined. following figure can see example visualization.  example population graph generated year range option selected. can see color represents particular state type line related specific sex.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"download-data-1","dir":"Articles","previous_headings":"Population tab","what":"Download data","title":"Shiny app","text":"last alternative first set options allows user download specified population data. However, option population data parameters (states, year ranges, sexes age ranges) can selected. population characteristics defined data can downloaded clicking Download data button bottom side bar panel. data downloaded .csv file.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"mortality-tab","dir":"Articles","previous_headings":"","what":"Mortality tab","title":"Shiny app","text":"tab provides graphs data concerning registered deaths Mexico. can see app, next two figures, shares initial structure population tab. initial sets options, first two used generate graphs based one year multiple years data third option permits download mortality data based user specifications.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"one-year-or-range-of-years-1","dir":"Articles","previous_headings":"Mortality tab","what":"One year or range of years?","title":"Shiny app","text":"population tab, cases state(s) sex(es) can defined user way. one year graphs chosen year selection made simple slider age ranges option available. year range graphs selected, user define minimum maximum value years used graphs year range option. Two types visualizations can generated options (one year range year graphs). graphs show number deaths death proportion sex. However, way information presented different. data defined one year, X-axis represent ages population. data includes multiple years, , X-axis represent years defined user. ’s graph available one year graphs option: mortality rate age. generate graph parameters side bar panel must defined. following figure can see example visualization.  previous graph can see colors represent states types lines related specific sex. addition, example mortality graph generated year range option selected shown next figure.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"download-data-2","dir":"Articles","previous_headings":"Mortality tab","what":"Download data","title":"Shiny app","text":"last alternative first set options allows user download specified mortality data. However, option mortality data parameters (states, year ranges, sexes age ranges) can selected. mortality characteristics defined data can downloaded clicking Download data button bottom side bar panel. data downloaded .csv file.","code":""},{"path":"https://padeci.github.io/demogmx/articles/demogmx_shiny.html","id":"aging-rate-tab","dir":"Articles","previous_headings":"","what":"Aging rate tab","title":"Shiny app","text":"tab provides visualizations data aging population. get necessary define states (1), years (2), sexes (3) age range (4) desired population. tab, available years select range 1985 2020 possible range ages goes 0 89 years old. bold numbers inside parentheses refer numbers figure end section tab. user defined parameters, two graphs can created: Get aging population age (5) Get aging rate age (6) graphs X-axis represent age population , previous graphs, state represented unique color sex specific type line. parameter set defined, data user can downloaded clicking Download data button (7). format downloaded file .csv.  important note Year parameter two-bounded slider. upper bound slider used plotting defining maximum year downloaded dataset take. lower bound used define minimum year value downladed data take.","code":""},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"births","dir":"Articles","previous_headings":"","what":"Births","title":"How to use the functions?","text":"function gives dataset number rate births years, states, sexes indicated user. present version package two functions obtain birth information Mexico. One gives information sex disaggregation data 1985 2020 sex disaggregation projections between1970 2050. function age_groups option, instead year_groups option aggregates information age way explained age_groups .","code":""},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"general-births-from-1970-to-2050","dir":"Articles","previous_headings":"Births","what":"General births from 1970 to 2050","title":"How to use the functions?","text":"function gets number births estimated National Council Population (CONAPO acronym spanish), additionally provides birth rate information based population information can accessed get_population(). function birth projections 1970 2050 state sex disaggregation. Problema: en demog-mx vienen los scripts de cómo se manipularon las bases de datos originales, quizás sea necesario volverlo hacer aquí para que pueda ser replicable. En el caso específico de los nacimientos de la CONAPO, hay que procesar la base de datos original para obtener los datos obtenidos en data-raw. function contains next parameters: v_state requires element vector characters containing names desired states. v_year needs numeric element vector years information. year_groups needs logical argument indicates data grouped years. Ahead examples function can used. First obtain data without aggregating years. Now can see happens output aggregated. Note year column changes name based whether chose group data. data grouped column named year. grouped named year_group. functions package receive wrong input parameters, throw error message list accepted values, based parameter error detected.","code":"# Get data without grouping by year range get_births(v_state = c(\"Guerrero\", \"Zacatecas\", \"National\"),            v_year = c(1970, 2000, 2020),            year_groups = FALSE) ## # A tibble: 9 x 5 ##    year state     CVE_GEO  births birth_rate ##   <int> <chr>       <dbl>   <int>      <dbl> ## 1  1970 Guerrero       12   85806     0.0511 ## 2  2000 Guerrero       12   84012     0.0270 ## 3  2020 Guerrero       12   68085     0.0186 ## 4  1970 National        0 2222585     0.0444 ## 5  2000 National        0 2322025     0.0237 ## 6  2020 National        0 2151358     0.0169 ## 7  1970 Zacatecas      32   43853     0.0447 ## 8  2000 Zacatecas      32   35136     0.0257 ## 9  2020 Zacatecas      32   31168     0.0188 # Get data grouping by year range get_births(v_state = c(\"Michoacan\", \"Guerrero\", \"Zacatecas\", \"National\"),            v_year = c(1970, 2000, 2020),            year_groups = TRUE) ## # A tibble: 12 x 5 ##    year_group  state     CVE_GEO   births birth_rate ##    <fct>       <chr>       <dbl>    <int>      <dbl> ##  1 [1970,2000] Guerrero       12  2773431     0.0370 ##  2 [1970,2000] Michoacan      16  3580985     0.0352 ##  3 [1970,2000] National        0 73396334     0.0317 ##  4 [1970,2000] Zacatecas      32  1286995     0.0342 ##  5 (2000,2020] Guerrero       12  1535249     0.0226 ##  6 (2000,2020] Michoacan      16  1890914     0.0215 ##  7 (2000,2020] National        0 45055055     0.0198 ##  8 (2000,2020] Zacatecas      32   662425     0.0219 ##  9 (2020,Inf]  Guerrero       12  1615318     0.0146 ## 10 (2020,Inf]  Michoacan      16  2428192     0.0156 ## 11 (2020,Inf]  National        0 57038811     0.0135 ## 12 (2020,Inf]  Zacatecas      32   828243     0.0154 # Throw an error get_births(v_state = 55, # Is not a character and is not a state name.            v_year = c(1970, 2000, 2020),            year_groups = FALSE) ## Error in get_births(v_state = 55, v_year = c(1970, 2000, 2020), year_groups = FALSE): v_state must be a character element or vector containing at least one of the next names: ##  ## Aguascalientes, Baja California, Baja California Sur, Campeche, Chiapas, Chihuahua, Coahuila, Colima, Durango, Guanajuato, Guerrero, Hidalgo, Jalisco, Mexico City, Michoacan, Morelos, National, Nayarit, Nuevo Leon, Oaxaca, Puebla, Queretaro, Quintana Roo, San Luis Potosi, Sinaloa, Sonora, State of Mexico, Tabasco, Tamaulipas, Tlaxcala, Veracruz, Yucatan, Zacatecas"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"births-by-sex","dir":"Articles","previous_headings":"Births","what":"Births by sex","title":"How to use the functions?","text":"function gives number registered births based Mexico’s National Institute Statistical Geographical data (INEGI, ’s acronym Spanish). previous function, provides birth rate information. information disaggregated sex state estimations 1980 2020. function parameter called v_sex specifies sexes contain output data-set. input accepts character arguments “Female”, “Male” “Total”, giving information sex aggregation , respectively. example function can used, without aggregating year. can see works decide aggregate information years.","code":"# Get data without grouping by year range get_births_INEGI(v_state = c( \"Guerrero\", \"National\"),                  v_year = c(2000, 2020),                  v_sex = c(\"Female\", \"Total\"),                  year_groups = FALSE) ## # A tibble: 8 x 7 ##    year state    CVE_GEO sex     births birth_prop birth_rate ##   <dbl> <chr>      <dbl> <chr>    <dbl>      <dbl>      <dbl> ## 1  2000 Guerrero      12 Female   85116      0.520     0.0533 ## 2  2000 Guerrero      12 Total   163640      1         0.0525 ## 3  2020 Guerrero      12 Female   29606      0.493     0.0157 ## 4  2020 Guerrero      12 Total    60022      1         0.0164 ## 5  2000 National       0 Female 1398703      0.500     0.0280 ## 6  2000 National       0 Total  2797580      1         0.0285 ## 7  2020 National       0 Female  800264      0.491     0.0123 ## 8  2020 National       0 Total  1629208      1         0.0128 # Get data grouping by year range get_births_INEGI(v_state = c( \"Guerrero\", \"National\"),                  v_year = c(2000, 2020),                  v_sex = c(\"Female\", \"Total\"),                  year_groups = TRUE) ## # A tibble: 4 x 7 ##   year_group  state    CVE_GEO sex      births birth_prop birth_rate ##   <fct>       <chr>      <dbl> <chr>     <dbl>      <dbl>      <dbl> ## 1 [2000,2020] Guerrero      12 Female  1114059      0.508     0.0304 ## 2 [2000,2020] Guerrero      12 Total   2194179      1         0.0308 ## 3 [2000,2020] National       0 Female 25813848      0.497     0.0214 ## 4 [2000,2020] National       0 Total  51915377      1         0.0219"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"population","dir":"Articles","previous_headings":"","what":"Population","title":"How to use the functions?","text":"get_population() function returns estimations CONAPO number people living Mexico. function allows filter data based year, state, sex age specified user. function population projections 1970 2050 get_population() function includes next parameters: v_age requires numeric vector indicates ages returned output data. age_groups needs logical argument order group data based input v_age. Let’s see example function executed without aggregating data age. Now, use function aggregating age get next result:","code":"# Get population data without grouping by age get_population(v_state = \"Mexico City\",                v_year = 2000,                v_sex = c(\"Female\", \"Male\"),                v_age = c(10, 25, 100),                age_groups = FALSE) ## # A tibble: 6 x 7 ##    year state       CVE_GEO sex      age population proportion ##   <int> <chr>         <dbl> <chr>  <int>      <dbl>      <dbl> ## 1  2000 Mexico City       9 Male      10      79634   0.497    ## 2  2000 Mexico City       9 Female    10      77915   0.475    ## 3  2000 Mexico City       9 Male      25      80613   0.503    ## 4  2000 Mexico City       9 Female    25      85947   0.524    ## 5  2000 Mexico City       9 Male     100         63   0.000393 ## 6  2000 Mexico City       9 Female   100        138   0.000841 # Get population data grouping by age get_population(v_state = \"Mexico City\",                v_year = 2000,                v_sex = c(\"Female\", \"Male\"),                v_age = c(10, 25, 100),                age_groups = TRUE) ## # A tibble: 6 x 7 ##    year state       CVE_GEO sex    age_group population proportion ##   <int> <chr>         <dbl> <chr>  <fct>          <dbl>      <dbl> ## 1  2000 Mexico City       9 Female [10,25]      1319456  0.355     ## 2  2000 Mexico City       9 Female (25,100]     2392044  0.644     ## 3  2000 Mexico City       9 Female (100,Inf]        197  0.0000531 ## 4  2000 Mexico City       9 Male   [10,25]      1283359  0.382     ## 5  2000 Mexico City       9 Male   (25,100]     2075376  0.618     ## 6  2000 Mexico City       9 Male   (100,Inf]         92  0.0000274"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"migration","dir":"Articles","previous_headings":"","what":"Migration","title":"How to use the functions?","text":"function allows user get information international interstate migration Mexico estimated CONAPO. data-set can give information disaggregated year (1970 2050), state, sex age (0 89 years). functions package, information retrieved function can aggregated age. get_population() particular parameter called v_type used define type migration present data-set output. available types migration function Interstate migration, International migration Total migration. can find examples get_population() can used different specifications. Note v_state = National v_type = Interstate, function return empty data-set interstate migration National level.","code":"# Get migration data without grouping by age and # with both types of migration get_migration(v_state = \"Mexico City\",               v_year = 2010,               v_sex = \"Total\",               v_age = c(25, 50),               v_type = c(\"Interstate\", \"International\"),               age_groups = FALSE) ## # A tibble: 4 x 12 ##    year state       CVE_GEO sex     age emigrants immigrants type  net_migration ##   <int> <chr>         <dbl> <chr> <int>     <dbl>      <dbl> <chr>         <dbl> ## 1  2010 Mexico City       9 Total    25       279        317 Inte~            38 ## 2  2010 Mexico City       9 Total    25      2900       2149 Inte~          -751 ## 3  2010 Mexico City       9 Total    50        70        104 Inte~            34 ## 4  2010 Mexico City       9 Total    50      1001        458 Inte~          -543 ## # ... with 3 more variables: em_rate <dbl>, im_rate <dbl>, nm_rate <dbl> # Get migration data grouping by age and # with both types of migration get_migration(v_state = \"Mexico City\",               v_year = 2010,               v_sex = \"Total\",               v_age = c(25, 50),               v_type = c(\"Interstate\", \"International\"),               age_groups = TRUE) ## # A tibble: 4 x 12 ##    year state   CVE_GEO sex   age_group type  emigrants immigrants net_migration ##   <int> <chr>     <dbl> <chr> <fct>     <chr>     <dbl>      <dbl>         <dbl> ## 1  2010 Mexico~       9 Total [25,50]   Inte~      4191       5281          1090 ## 2  2010 Mexico~       9 Total [25,50]   Inte~     54514      30933        -23581 ## 3  2010 Mexico~       9 Total (50,Inf]  Inte~       997       1127           130 ## 4  2010 Mexico~       9 Total (50,Inf]  Inte~     13891       5420         -8471 ## # ... with 3 more variables: em_rate <dbl>, im_rate <dbl>, nm_rate <dbl> # Get migration data without grouping by age get_migration(v_state = \"National\",               v_year = 2010,               v_sex = \"Total\",               v_age = c(0, 10, 15),               v_type = \"Interstate\",               age_groups = FALSE) ## # A tibble: 0 x 12 ## # ... with 12 variables: year <int>, state <chr>, CVE_GEO <dbl>, sex <chr>, ## #   age <int>, emigrants <dbl>, immigrants <dbl>, type <chr>, ## #   net_migration <dbl>, em_rate <dbl>, im_rate <dbl>, nm_rate <dbl>"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"mortality","dir":"Articles","previous_headings":"","what":"Mortality","title":"How to use the functions?","text":"function allows us get estimation number deaths made CONAPO. works identically get_population(). user must define year(s), state(s), sex(es), age(s) obtain data. well, option whether information grouped age . Ahead find examples function can used","code":"# Get mortality data without grouping by age get_deaths(v_state = c(\"Guanajuato\", \"Nuevo Leon\"),            v_year = 2015,            v_sex = c(\"Male\", \"Total\"),            v_age = c(15, 25, 35),            age_groups = FALSE) ## # A tibble: 12 x 7 ##     year state      CVE_GEO sex     age deaths death_rate ##    <int> <chr>        <dbl> <chr> <int>  <dbl>      <dbl> ##  1  2015 Guanajuato      11 Male     15     45   0.000781 ##  2  2015 Guanajuato      11 Total    15     67   0.000587 ##  3  2015 Guanajuato      11 Male     25    121   0.00239  ##  4  2015 Guanajuato      11 Total    25    156   0.00150  ##  5  2015 Guanajuato      11 Male     35    123   0.00320  ##  6  2015 Guanajuato      11 Total    35    170   0.00205  ##  7  2015 Nuevo Leon      19 Male     15     34   0.000732 ##  8  2015 Nuevo Leon      19 Total    15     49   0.000540 ##  9  2015 Nuevo Leon      19 Male     25    106   0.00231  ## 10  2015 Nuevo Leon      19 Total    25    131   0.00146  ## 11  2015 Nuevo Leon      19 Male     35    116   0.00303  ## 12  2015 Nuevo Leon      19 Total    35    153   0.00197 # Get mortality data grouping by age get_deaths(v_state = c(\"Guanajuato\", \"Nuevo Leon\"),            v_year = 2015,            v_sex = c(\"Male\", \"Total\"),            v_age = c(15, 25, 35),            age_groups = TRUE) ## # A tibble: 12 x 7 ##     year state      CVE_GEO sex   age_group deaths death_rate ##    <int> <chr>        <dbl> <chr> <fct>      <dbl>      <dbl> ##  1  2015 Guanajuato      11 Male  [15,25]      970    0.00159 ##  2  2015 Guanajuato      11 Male  (25,35]     1230    0.00284 ##  3  2015 Guanajuato      11 Male  (35,Inf]   14540    0.0154  ##  4  2015 Guanajuato      11 Total [15,25]     1299    0.00106 ##  5  2015 Guanajuato      11 Total (25,35]     1625    0.00177 ##  6  2015 Guanajuato      11 Total (35,Inf]   27028    0.0134  ##  7  2015 Nuevo Leon      19 Male  [15,25]      806    0.00155 ##  8  2015 Nuevo Leon      19 Male  (25,35]     1124    0.00271 ##  9  2015 Nuevo Leon      19 Male  (35,Inf]   13130    0.0138  ## 10  2015 Nuevo Leon      19 Total [15,25]     1041    0.00103 ## 11  2015 Nuevo Leon      19 Total (25,35]     1426    0.00172 ## 12  2015 Nuevo Leon      19 Total (35,Inf]   23662    0.0121"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"aging-rate","dir":"Articles","previous_headings":"","what":"Aging rate","title":"How to use the functions?","text":"aging rate proportion population age \\(\\) able live another year, words, aging rate division aging population total population. \\[ aging\\ rate = \\frac{aging\\ population_i}{total\\ population_i} \\] aging population, wrote, number people able live another period time (case, another year) specific location. Hence, calculate aging population specific age \\(\\), must add immigrants subtract emigrants deaths total population age, stated next equation. \\[ aging\\ population = population_i + immigrants_i - emigrants_i - deaths_i \\] age 0, necessary substitute population age \\(\\) births occurred, specific time location, equation. see, elements get aging population aging rate already hand, function created based outputs rest functions demogmx. function requires user specifies year, state, sex, age filter output , functions, data can aggregated ages defined user v_age. find examples function can used well outputs. NOTA: creo que especifqué mal la función get_aging_rate cuando la edad es cero.","code":"# Get mortality data without grouping by age get_aging_rate(v_state = \"National\",                v_year = seq(2000, 2010),                v_sex = \"Total\",                v_age = 47) ## # A tibble: 11 x 7 ##     year state    CVE_GEO sex     age aging_pop aging_rate ##    <int> <chr>      <dbl> <chr> <int>     <dbl>      <dbl> ##  1  2000 National       0 Total    47    841560      0.995 ##  2  2001 National       0 Total    47    878597      0.995 ##  3  2002 National       0 Total    47    917559      0.995 ##  4  2003 National       0 Total    47    956589      0.995 ##  5  2004 National       0 Total    47    996809      0.995 ##  6  2005 National       0 Total    47   1038726      0.996 ##  7  2006 National       0 Total    47   1079537      0.996 ##  8  2007 National       0 Total    47   1119101      0.996 ##  9  2008 National       0 Total    47   1157259      0.996 ## 10  2009 National       0 Total    47   1193257      0.996 ## 11  2010 National       0 Total    47   1227207      0.995 # Get aging data grouping by age get_aging_rate(v_state = \"National\",                v_year = seq(2000, 2010),                v_sex = \"Total\",                v_age = 47) ## # A tibble: 11 x 7 ##     year state    CVE_GEO sex     age aging_pop aging_rate ##    <int> <chr>      <dbl> <chr> <int>     <dbl>      <dbl> ##  1  2000 National       0 Total    47    841560      0.995 ##  2  2001 National       0 Total    47    878597      0.995 ##  3  2002 National       0 Total    47    917559      0.995 ##  4  2003 National       0 Total    47    956589      0.995 ##  5  2004 National       0 Total    47    996809      0.995 ##  6  2005 National       0 Total    47   1038726      0.996 ##  7  2006 National       0 Total    47   1079537      0.996 ##  8  2007 National       0 Total    47   1119101      0.996 ##  9  2008 National       0 Total    47   1157259      0.996 ## 10  2009 National       0 Total    47   1193257      0.996 ## 11  2010 National       0 Total    47   1227207      0.995"},{"path":"https://padeci.github.io/demogmx/articles/get_demographic_data.html","id":"get-help","dir":"Articles","previous_headings":"","what":"Get help","title":"How to use the functions?","text":"Finally, possible get help demogmx functions package. can go help tab search information specific function can write ? function console following code chunk.","code":"# ?get_population"},{"path":"https://padeci.github.io/demogmx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Garibay-Treviño. Author, maintainer. Fernando Alarid-Escudero. Author. . Funder.","code":""},{"path":"https://padeci.github.io/demogmx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mexico's demographic open data","code":"@Misc{,   title = {demogmx},   author = {David Garibay-Treviño and Fernando Alarid-Escudero},   year = {2022},   url = {https://padeci.github.io/demogmx/}, }"},{"path":[]},{"path":[]},{"path":"https://padeci.github.io/demogmx/index.html","id":"sobre-este-repositorio-open_book","dir":"","previous_headings":"","what":"Sobre este repositorio 📖","title":"Demographic data for Mexico","text":"PADeCI es un equipo de investigación interdisciplinario ubicado en el CIDE Región Centro en Aguascalientes, México. Con el contenido de este repostiorio se construyen diversas bases de datos de información demográfica de México, necesaria para los diferentes proyectos de PADeCI. Las series de tiempo poblacionales se construyen partir de la información pública del Consejo Nacional de Población (CONAPO). Gracias las proyecciones realizadas por el CONAPO, este repositorio cuenta con información sobre el tamaño de la población mexicana desde 1970, hasta el año 2051. Además de la población en un año específico, se incluyen proyecciones para el número de nacimientos, número de muertes, migración interestatal e internacional así como la tasa de envejecimiento. Hay bases para diferentes necesidades: desagregadas por año, por entidad federativa, por sexo y por edad. Las personas interesadas pueden utilizar los datos ofrecidos en este repositorio para cualquiera de sus proyectos profesionales o personales. Además de ser una herramienta de investigación, el respositorio también abre la oportunidad que cualquier persona replique el proceso de limpieza y generación de datos hecho por PADeCI, siguiendo así los principios científicos de transparencia y replicabilidad.","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"requisitos-computer","dir":"","previous_headings":"","what":"Requisitos 💻","title":"Demographic data for Mexico","text":"R version 4.1.2 (esta es la versión recomendada para evitar errores en el código, también conocidos como bugs).","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"uso-inbox_tray","dir":"","previous_headings":"","what":"Uso 📥","title":"Demographic data for Mexico","text":"Cualquier persona puede replicar el trabajo de PADeCI, ya sea clonando este repositorio en su computadora o descargando archivos específicos. Los datos también se pueden utilizar sin necesidad de descargar, ni clonar el respositorio: basta con utilizar el URL que GitHub provee de la base de datos específica que se desea utilizar en formato raw, continuación se presenta un ejemplo de cómo acceder los datos usando este método.","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"ejemplo-de-uso-de-los-datos-extracción-directa-con-url-de-github-desde-r","dir":"","previous_headings":"Uso 📥","what":"Ejemplo de uso de los datos (extracción directa con url de GitHub desde R)","title":"Demographic data for Mexico","text":"1. Seleccionar la base de interés El repositorio incluye numerosas bases de datos sobre nacimientos, población, migración y fallecimientos. En este caso utilizaremos la base de migración desagreada por entidad federativa. 2. Importar base de datos directamente desde Github En Github está la opción para descargar directamente la base de datos. Es importante notar que todas las bases que están en el paquete tienen el formato .rda que es particular de R.   3. Cargar base de datos Una vez descargada, la base de datos puede cargarse en el ambiente de R con el siguiente comando. Tómese en cuenta que los tres puntos antes de la diagonal son para indicar la ubicación del archivo en el directorio, ya sea de la computadora o sea dentro de algún proyecto de R. 4. Explorar datos Para una exploración rápida de la base se puede utilizar el comando head() y para ver toda la base el comando View(). En este ejemplo sería: partir de este punto el usuario puede decidir qué hacer con los datos y realizar su propio análisis.","code":"df_nueva <- load(file = \".../df_migration.rda\") head(df_nueva)  View(df_nueva)"},{"path":"https://padeci.github.io/demogmx/index.html","id":"descripción-de-las-carpetas-card_index_dividers","dir":"","previous_headings":"","what":"Descripción de las carpetas 🗂️","title":"Demographic data for Mexico","text":"1. R: En esta carpeta se ubican los códigos de las funciones para obtener las bases de datos filtradas con base en los parámetros indicados por el usuario. 2. analysis: En la carpeta de análisis se encuentran archivos donde se ejecutan las funciones para obtener bases de datos así como otros códigos de modelación basados en los datos del repositorio. 3. data-raw: Aquí se almacenan los datos descargados directamente desde fuentes oficiales sin haberles realizado ningún cambio en su contenido. Esta carpeta también incluye los códigos utilizados para limpiar, expandir y organizar las bases de datos, según sea el caso. La información detallada sobre estas bases se encuentra en la carpeta documents. 4. data: En esta carpeta se encuentran las bases de datos limpias y listas para ser utilizadas. Las bases de datos tienen formato .rda y, en caso de que la paquetería se encuentre cargada, pueden ser accedidas desde la consola escribiendo su nombre. Por ejemplo, se puede acceder la base de migración al ejecutar df_migration desde la consola. Las bases de datos de esta carpeta contienen las siguientes variables: Variables demográfica Número de habitantes (población) Número de nacimientos Número de muertes Número de inmigrantes/emigrantes Niveles de desagregación espacial Estatal Niveles de desagregación temporal Año de la(s) variable(s) Variables de características personales Sexo Edad 5. documents: La carpeta de documentos incluye los diccionarios de datos y fichas técnicas sobre las bases de datos contenidas en este repositorio.","code":""},{"path":[]},{"path":[]},{"path":"https://padeci.github.io/demogmx/index.html","id":"licencia-de-uso-scroll","dir":"","previous_headings":"","what":"Licencia de uso 📜","title":"Demographic data for Mexico","text":"El contenido de este repositorio debe utilizarse bajo las condiciones de la licencia MIT.","code":""},{"path":[]},{"path":"https://padeci.github.io/demogmx/index.html","id":"about-this-repository-open_book","dir":"","previous_headings":"","what":"About this repository 📖","title":"Demographic data for Mexico","text":"PADeCI interdisciplinary research team based CIDE Región Centro Aguascalientes, Mexico. repository’s content several data bases Mexico’s demographic information constructed. informatión needed many PADeCI’s projects. Population time series constructed public information provided National Population Council (CONAPO spanish acronym). Thanks projections made CONAPO, datasets contain information 1970 2051. Besides population given year, proyections regarding number births, number deaths, interstate international migration, aging rate, included. Interested persons can use data repository professional personal projects. addition research tool, repository also opens opportunity anyone replicate process data cleaning generation carried PADeCI, following scientific principles transparency replicability.","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"requirements-computer","dir":"","previous_headings":"","what":"Requirements 💻","title":"Demographic data for Mexico","text":"R version 4.1.2 (version recommended avoid potential bugs.)","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"usage-inbox_tray","dir":"","previous_headings":"","what":"Usage 📥","title":"Demographic data for Mexico","text":"user can either clone repository computer download specific files order replicate PADeCI’s job.suffices using URL raw format provided GitHub data base interest. quick example retrive data last method shown .","code":""},{"path":"https://padeci.github.io/demogmx/index.html","id":"use-example-extracting-data-with-githubs-url-from-r","dir":"","previous_headings":"Usage 📥","what":"Use example (extracting data with GitHub’s URL from R)","title":"Demographic data for Mexico","text":"1. Select dataset interest repository includes several datasets regarding births, population, migration mortality. case, use dataset anual migration disagregates state. 2. Import datasets Github repository data base chosen, can directly downloaded location Github repository. Note cleaned datasets repository .rda format.   3. Load datasets downloading file. data set can loaded R using next code: Note three periods diagonal indicate file location within computer directory within R project. 4. Explore data quick data exploration, head() command can used; order see whole data frame, View() command must used. Following example: stage, user can decide data proceed analysis.","code":"df_new <- load(file = \".../df_migration.rda\") head(df_new)  View(df_new)"},{"path":"https://padeci.github.io/demogmx/index.html","id":"folders-description-card_index_dividers","dir":"","previous_headings":"","what":"Folders’ description 🗂️","title":"Demographic data for Mexico","text":"1. R: folder stores R scripts stores functions needed obtaining filtered datasets based parmaeters set user. 2. analysis: folder contains script files execute functions stored R folder well modelling scripts based datasets repository. 3. data-raw: datasets downloaded directly oficial sites without change content stored folder. , scripts used clean, expand organize raw datasets can found. Information raw datasets can found documents folder. 4. data: foler cleaned datasets can found. datasets contained .rda format , library loaded, datasets can accesed console writting name. instance, migration dataset can accesed executing df_migration console. datasets folder following variables: Demographic variables Number inhabitants (population) Number births Number deaths Number immigrants/emigrants Spatial dissagregation levels State Temporal dissagregation levels Year data Personal characteristic variables Sex Age 5. documents: folder contains dictionaries technical reports datasets.","code":""},{"path":[]},{"path":[]},{"path":"https://padeci.github.io/demogmx/index.html","id":"license-scroll","dir":"","previous_headings":"","what":"License 📜","title":"Demographic data for Mexico","text":"repository’s content must used terms conditions MIT License","code":""},{"path":"https://padeci.github.io/demogmx/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"3-Clause BSD License","title":"3-Clause BSD License","text":"Copyright (c) 2022 demogmx authors Redistribution use source binary forms, without modification, permitted provided following conditions met: Redistributions source code must retain copyright notice, list conditions following disclaimer. Redistributions binary form must reproduce copyright notice, list conditions following disclaimer documentation /materials provided distribution. Neither name copyright holder names contributors may used endorse promote products derived software without specific prior written permission. SOFTWARE PROVIDED COPYRIGHT HOLDERS CONTRIBUTORS “” EXPRESS IMPLIED WARRANTIES, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE DISCLAIMED. EVENT SHALL COPYRIGHT HOLDER CONTRIBUTORS LIABLE DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, CONSEQUENTIAL DAMAGES (INCLUDING, LIMITED , PROCUREMENT SUBSTITUTE GOODS SERVICES; LOSS USE, DATA, PROFITS; BUSINESS INTERRUPTION) HOWEVER CAUSED THEORY LIABILITY, WHETHER CONTRACT, STRICT LIABILITY, TORT (INCLUDING NEGLIGENCE OTHERWISE) ARISING WAY USE SOFTWARE, EVEN ADVISED POSSIBILITY DAMAGE.","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_births_INEGI.html","id":null,"dir":"Reference","previous_headings":"","what":"Birth data of Mexico, between 1985 to 2020, disaggregated by sex — df_births_INEGI","title":"Birth data of Mexico, between 1985 to 2020, disaggregated by sex — df_births_INEGI","text":"dataset containing number births registered INEGI 1985 2020. estimations disaggregated year state sex","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_births_INEGI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Birth data of Mexico, between 1985 to 2020, disaggregated by sex — df_births_INEGI","text":"","code":"df_births_INEGI"},{"path":"https://padeci.github.io/demogmx/reference/df_births_INEGI.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Birth data of Mexico, between 1985 to 2020, disaggregated by sex — df_births_INEGI","text":"data frame 3,564 rows 8 variables: year Year data state State births occurred sex Sex child CVE_GEO Geographical code state occurrence births Number births occurred year, state sex birth_prop Proportion births relation sum sexes population Number people living year state birth_rate Number births divided population year, state sex.","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_births_INEGI.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Birth data of Mexico, between 1985 to 2020, disaggregated by sex — df_births_INEGI","text":"https://www.inegi.org.mx/sistemas/olap/Proyectos/bd/continuas/natalidad/nacimientos.asp","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_birth_pop_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Birth data of Mexico, between 1970 to 2050 — df_birth_pop_states","title":"Birth data of Mexico, between 1970 to 2050 — df_birth_pop_states","text":"dataset containing number births estimated CONAPO 1970 2050. estimations disaggregated year state sex child.","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_birth_pop_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Birth data of Mexico, between 1970 to 2050 — df_birth_pop_states","text":"","code":"df_birth_pop_states"},{"path":"https://padeci.github.io/demogmx/reference/df_birth_pop_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Birth data of Mexico, between 1970 to 2050 — df_birth_pop_states","text":"data frame 2,673 rows 5 variables: year Year data state State births occurred CVE_GEO Geographical code state occurrence population Number people living year state births Number births occurred year state","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_birth_pop_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Birth data of Mexico, between 1970 to 2050 — df_birth_pop_states","text":"https://datos.gob.mx/busca/dataset/proyecciones-de-la-poblacion-de-mexico-y-de-las-entidades-federativas-2016-2050/resource/284ef503-6c57-4a5c-8247-e13241ad4cee","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_migration.html","id":null,"dir":"Reference","previous_headings":"","what":"Migration data of Mexico, from 1970 to 2050 aggregated by ages. — df_migration","title":"Migration data of Mexico, from 1970 to 2050 aggregated by ages. — df_migration","text":"dataset containing estimated migration CONAPO 1970 2050. estimations disaggregated year, state, sex type migration (immigration emigration). dataset includes emigration rate estimates. dataset groups information groups ages increases 5 years.","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_migration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migration data of Mexico, from 1970 to 2050 aggregated by ages. — df_migration","text":"","code":"df_migration"},{"path":"https://padeci.github.io/demogmx/reference/df_migration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Migration data of Mexico, from 1970 to 2050 aggregated by ages. — df_migration","text":"data frame 84,672 rows 8 variables: year Year data state State migration occurred CVE_GEO Geographical code state occurrence sex Sex migrants age_group Age group belongs data type Type migration: Interstate, International Total emigrants Number emigrants immigrants Number immigrants migratoin Net migration (immigrants - emigrants) em_rate emigration rate im_rate immigration rate","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_migration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Migration data of Mexico, from 1970 to 2050 aggregated by ages. — df_migration","text":"https://datos.gob.mx/busca/dataset/proyecciones-de-la-poblacion-de-mexico-y-de-las-entidades-federativas-2016-2050/resource/81802225-00c4-49b4-ab49-a491334062b4, https://datos.gob.mx/busca/dataset/proyecciones-de-la-poblacion-de-mexico-y-de-las-entidades-federativas-2016-2050/resource/3f9c8392-153d-4299-a027-9f1b179f6edf","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_migration_expanded.html","id":null,"dir":"Reference","previous_headings":"","what":"Migration data of Mexico, from 1970 to 2050. — df_migration_expanded","title":"Migration data of Mexico, from 1970 to 2050. — df_migration_expanded","text":"dataset containing estimated migration CONAPO 1970 2050. estimations disaggregated year, state, sex type migration (immigration emigration).","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_migration_expanded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migration data of Mexico, from 1970 to 2050. — df_migration_expanded","text":"","code":"df_migration_expanded"},{"path":"https://padeci.github.io/demogmx/reference/df_migration_expanded.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Migration data of Mexico, from 1970 to 2050. — df_migration_expanded","text":"data frame 2,116,800 rows 8 variables: year Year data state State migration occurred age Age belongs data CVE_GEO Geographical code state occurrence sex Sex migrants emigrants Number emigrants immigrants Number immigrants type Type migration: Interstate, International Total","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_mortrate_state_age_sex.html","id":null,"dir":"Reference","previous_headings":"","what":"Population and deaths data of Mexico, from 1970 to 2050. — df_mortrate_state_age_sex","title":"Population and deaths data of Mexico, from 1970 to 2050. — df_mortrate_state_age_sex","text":"dataset containing estimated population deaths CONAPO 1970 2050. estimations disaggregated year, state sex","code":""},{"path":"https://padeci.github.io/demogmx/reference/df_mortrate_state_age_sex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population and deaths data of Mexico, from 1970 to 2050. — df_mortrate_state_age_sex","text":"","code":"df_mortrate_state_age_sex"},{"path":"https://padeci.github.io/demogmx/reference/df_mortrate_state_age_sex.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population and deaths data of Mexico, from 1970 to 2050. — df_mortrate_state_age_sex","text":"data frame 882,420 rows 7 variables: year Year data state State data sex Sex data CVE_GEO Geographical code state data age Age data population Estimated population CONAPO deaths Estimated deaths CONAPO","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_aging_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Load aging rate data — get_aging_rate","title":"Load aging rate data — get_aging_rate","text":"get_aging_rate function allows user get demographic dataset regarding aging rate based given parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_aging_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load aging rate data — get_aging_rate","text":"","code":"get_aging_rate(   v_state = \"National\",   v_year = 2020,   v_sex = c(\"Female\", \"Male\", \"Total\"),   v_age = c(0, 15, 24, 36) )"},{"path":"https://padeci.github.io/demogmx/reference/get_aging_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load aging rate data — get_aging_rate","text":"v_state Character vector specifying state(s) function return. v_year Numeric vector specifies year(s) return. Must numbers 1985 2020. Default 2021. v_sex Character vector selecting sex. Options: Female, Male Total. v_age Numeric vector specifies age(s) return. Must values 0 89.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_aging_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load aging rate data — get_aging_rate","text":"demographic dataset containing selected year (group, year_groups = TRUE), state, state code (CVE_GEO), sex, aging population aging rate.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_aging_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load aging rate data — get_aging_rate","text":"","code":"get_aging_rate(v_state = \"National\",                v_year = seq(1991, 1995),                v_sex = \"Total\",                v_age = c(0, 89)) #> # A tibble: 10 x 7 #>     year state    CVE_GEO sex     age aging_pop aging_rate #>    <dbl> <chr>      <dbl> <chr> <dbl>     <dbl>      <dbl> #>  1  1991 National       0 Total     0   2674957      1.14  #>  2  1992 National       0 Total     0   2719149      1.16  #>  3  1993 National       0 Total     0   2763456      1.17  #>  4  1994 National       0 Total     0   2830637      1.20  #>  5  1995 National       0 Total     0   2679377      1.14  #>  6  1991 National       0 Total    89     25994      0.858 #>  7  1992 National       0 Total    89     27189      0.859 #>  8  1993 National       0 Total    89     28240      0.859 #>  9  1994 National       0 Total    89     29273      0.860 #> 10  1995 National       0 Total    89     30187      0.857"},{"path":"https://padeci.github.io/demogmx/reference/get_births.html","id":null,"dir":"Reference","previous_headings":"","what":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","title":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","text":"get_births function allows user get demographic dataset number rate births based given parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","text":"","code":"get_births(v_state = \"National\", v_year = 2021, year_groups = TRUE)"},{"path":"https://padeci.github.io/demogmx/reference/get_births.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","text":"v_state Character vector specifying state(s) function return. v_year Numeric vector specifies year(s) return. Must numbers 1970 2050. Default 2021. year_groups Logical. Specifies whether aggregate output year groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","text":"demographic dataset containing selected year (group, year_groups = TRUE), state, state code (CVE_GEO), number births birth rate row,","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load births data, with projections from 1970 to 2050, without sex disaggregation. — get_births","text":"","code":"get_births(v_state = c(\"Aguascalientes\", \"Campeche\"),            v_year = c(1995, 2021, 2046),            year_groups = TRUE) #> # A tibble: 6 x 5 #>   year_group  state          CVE_GEO births birth_rate #>   <fct>       <chr>            <dbl>  <int>      <dbl> #> 1 [1995,2021] Aguascalientes       1 676967     0.0219 #> 2 [1995,2021] Campeche             4 464712     0.0212 #> 3 (2021,2046] Aguascalientes       1 553134     0.0135 #> 4 (2021,2046] Campeche             4 439544     0.0147 #> 5 (2046,Inf]  Aguascalientes       1  76754     0.0107 #> 6 (2046,Inf]  Campeche             4  68578     0.0124  get_births(v_state = \"National\",            v_year = c(1985, 2005, 2046),            year_groups= FALSE) #> # A tibble: 3 x 5 #>    year state    CVE_GEO  births birth_rate #>   <int> <chr>      <dbl>   <int>      <dbl> #> 1  1985 National       0 2392768     0.0318 #> 2  2005 National       0 2280834     0.0217 #> 3  2046 National       0 1735451     0.0118"},{"path":"https://padeci.github.io/demogmx/reference/get_births_INEGI.html","id":null,"dir":"Reference","previous_headings":"","what":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","title":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","text":"get_births_INEGI function allows user get demographic dataset number rate births based given parameters. function returns recorded births INEGI allows specify sex.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births_INEGI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","text":"","code":"get_births_INEGI(   v_state = \"National\",   v_year = 2010,   v_sex = c(\"Female\", \"Male\", \"Total\"),   year_groups = TRUE )"},{"path":"https://padeci.github.io/demogmx/reference/get_births_INEGI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","text":"v_state Character vector specifying state(s) function return. v_year Numeric vector specifies year(s) return. Must numbers 1985 2020. Default 2021. v_sex Vector selecting sex. Options: Female, Male Total. year_groups Logical. Specifies whether aggregate output year groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births_INEGI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","text":"demographic dataset containing selected year (group, year_groups = TRUE), state, state code (CVE_GEO), sex, number births proportion births (relation total births year), birth rate.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_births_INEGI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load births data, disaggregated by sex, from 1985 to 2020. — get_births_INEGI","text":"","code":"get_births_INEGI(v_state = c(\"Aguascalientes\", \"Campeche\"),                  v_year = c(1995, 2005, 2015),                  v_sex = \"Male\",                  year_groups = TRUE) #> # A tibble: 6 x 7 #>   year_group  state          CVE_GEO sex   births birth_prop birth_rate #>   <fct>       <chr>            <dbl> <chr>  <dbl>      <dbl>      <dbl> #> 1 [1995,2005] Aguascalientes       1 Male  142856      0.508     0.0278 #> 2 [1995,2005] Campeche             4 Male  101063      0.505     0.0262 #> 3 (2005,2015] Aguascalientes       1 Male  132207      0.509     0.0225 #> 4 (2005,2015] Campeche             4 Male   93836      0.506     0.0225 #> 5 (2015,Inf]  Aguascalientes       1 Male   62873      0.509     0.0184 #> 6 (2015,Inf]  Campeche             4 Male   38489      0.508     0.0163  get_births_INEGI(v_state = \"National\",                  v_year = c(1985, 2005, 2015),                  v_sex = \"Total\",                  year_groups = FALSE) #> # A tibble: 3 x 7 #>    year state    CVE_GEO sex    births birth_prop birth_rate #>   <dbl> <chr>      <dbl> <chr>   <dbl>      <dbl>      <dbl> #> 1  1985 National       0 Total 2634371          1     0.0350 #> 2  2005 National       0 Total 2567313          1     0.0245 #> 3  2015 National       0 Total 2353555          1     0.0195"},{"path":"https://padeci.github.io/demogmx/reference/get_deaths.html","id":null,"dir":"Reference","previous_headings":"","what":"Load death data disaggregated by year, state, sex and age. — get_deaths","title":"Load death data disaggregated by year, state, sex and age. — get_deaths","text":"get_deaths function allows user get demographic dataset regarding deaths death rates, based given paramaters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_deaths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load death data disaggregated by year, state, sex and age. — get_deaths","text":"","code":"get_deaths(   v_state = \"National\",   v_year = 2021,   v_sex = \"Total\",   v_age = c(0, 5, 15, 25, 45, 55, 65, 70),   age_groups = TRUE )"},{"path":"https://padeci.github.io/demogmx/reference/get_deaths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load death data disaggregated by year, state, sex and age. — get_deaths","text":"v_state Character vector specifying state(s) function return v_year Numeric vector specifies year(s) return. Must numbers 1970 2050. v_sex Character vector selects sex. Options: Female, Male Total. v_age Numeric vector specifies age(s) return. age_groups Specifies whether aggregate output age groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_deaths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load death data disaggregated by year, state, sex and age. — get_deaths","text":"demographic dataset based selected parameters","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_deaths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load death data disaggregated by year, state, sex and age. — get_deaths","text":"","code":"get_deaths(v_state =  \"Chiapas\",            v_year = 2015,            v_sex = \"Total\",            v_age = c(0, 15, 45, 75),            age_groups = FALSE) #> # A tibble: 4 x 7 #>    year state   CVE_GEO sex     age deaths death_rate #>   <int> <chr>     <dbl> <chr> <int>  <dbl>      <dbl> #> 1  2015 Chiapas       7 Total     0   2785   0.0220   #> 2  2015 Chiapas       7 Total    15     69   0.000637 #> 3  2015 Chiapas       7 Total    45    213   0.00394  #> 4  2015 Chiapas       7 Total    75    487   0.0431    get_deaths(v_state = c(\"Aguascalientes\", \"Campeche\"),            v_year = c(2010, 2021),            v_sex = \"Male\",            v_age = c(0, 15, 45, 75),            age_groups = TRUE) #> # A tibble: 16 x 7 #>     year state          CVE_GEO sex   age_group deaths death_rate #>    <int> <chr>            <dbl> <chr> <fct>      <dbl>      <dbl> #>  1  2010 Aguascalientes       1 Male  [0,15]       273   0.00133  #>  2  2010 Aguascalientes       1 Male  (15,45]      743   0.00277  #>  3  2010 Aguascalientes       1 Male  (45,75]     1360   0.0141   #>  4  2010 Aguascalientes       1 Male  (75,Inf]     816   0.0910   #>  5  2010 Campeche             4 Male  [0,15]       232   0.00174  #>  6  2010 Campeche             4 Male  (15,45]      527   0.00270  #>  7  2010 Campeche             4 Male  (45,75]     1057   0.0142   #>  8  2010 Campeche             4 Male  (75,Inf]     717   0.0903   #>  9  2021 Aguascalientes       1 Male  [0,15]       206   0.000976 #> 10  2021 Aguascalientes       1 Male  (15,45]      826   0.00243  #> 11  2021 Aguascalientes       1 Male  (45,75]     2072   0.0141   #> 12  2021 Aguascalientes       1 Male  (75,Inf]    1127   0.0870   #> 13  2021 Campeche             4 Male  [0,15]       193   0.00135  #> 14  2021 Campeche             4 Male  (15,45]      637   0.00269  #> 15  2021 Campeche             4 Male  (45,75]     1593   0.0148   #> 16  2021 Campeche             4 Male  (75,Inf]     993   0.0923"},{"path":"https://padeci.github.io/demogmx/reference/get_death_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","title":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","text":"get_death_population function allows user get demographic dataset population deaths based given parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_death_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","text":"","code":"get_death_population(   v_state = \"National\",   v_year = \"2021\",   v_sex = \"Total\",   v_age = c(0, 5, 15, 25, 45, 55, 65, 70),   age_groups = TRUE )"},{"path":"https://padeci.github.io/demogmx/reference/get_death_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","text":"v_state Character vector specifying state(s) function return. v_year Numeric vector specifies year(s) return. Must numbers 1970 2050. Default 2021. v_sex Character vector selects sex. Options: Female, Male Total. v_age Numeric vector specifies age(s) return. age_groups Specifies whether aggregate output age groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_death_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","text":"demographic dataset based selected parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_death_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load population and death data, disaggregated by year, state, sex and age. — get_death_population","text":"","code":"get_death_population(v_state = c(\"Aguascalientes\", \"Campeche\"),                      v_year = c(2021, 2046),                      v_sex = c(\"Female\", \"Total\"),                      age_groups = TRUE) #> # A tibble: 64 x 7 #>     year state          CVE_GEO sex    age_group population deaths #>    <int> <chr>            <dbl> <chr>  <fct>          <dbl>  <dbl> #>  1  2021 Aguascalientes       1 Female [0,5]          73217    124 #>  2  2021 Aguascalientes       1 Female (5,15]        129266     27 #>  3  2021 Aguascalientes       1 Female (15,25]       129438     61 #>  4  2021 Aguascalientes       1 Female (25,45]       216476    225 #>  5  2021 Aguascalientes       1 Female (45,55]        82038    299 #>  6  2021 Aguascalientes       1 Female (55,65]        55209    508 #>  7  2021 Aguascalientes       1 Female (65,70]        17276    319 #>  8  2021 Aguascalientes       1 Female (70,Inf]       29851   1733 #>  9  2021 Aguascalientes       1 Total  [0,5]         149230    281 #> 10  2021 Aguascalientes       1 Total  (5,15]        264282     76 #> # ... with 54 more rows  get_death_population(v_state = \"National\",                      v_year = c(2021, 2046, 2050),                      v_sex = \"Total\",                      age_groups= FALSE) #> # A tibble: 24 x 7 #>     year state    CVE_GEO sex     age population deaths #>    <int> <chr>      <dbl> <chr> <int>      <dbl>  <dbl> #>  1  2021 National       0 Total     0    2127321  26647 #>  2  2021 National       0 Total     5    2193584    543 #>  3  2021 National       0 Total    15    2228965   1209 #>  4  2021 National       0 Total    25    2153706   3066 #>  5  2021 National       0 Total    45    1630861   5622 #>  6  2021 National       0 Total    55    1265172   9809 #>  7  2021 National       0 Total    65     809988  14579 #>  8  2021 National       0 Total    70     579843  15892 #>  9  2046 National       0 Total     0    1743438   9001 #> 10  2046 National       0 Total     5    1813726    130 #> # ... with 14 more rows"},{"path":"https://padeci.github.io/demogmx/reference/get_migration.html","id":null,"dir":"Reference","previous_headings":"","what":"Load migration data — get_migration","title":"Load migration data — get_migration","text":"get_migration function allows user get demographic dataset regarding migration based given parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_migration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load migration data — get_migration","text":"","code":"get_migration(   v_state = \"National\",   v_year = c(2000, 2010, 2025),   v_sex = c(\"Female\", \"Male\", \"Total\"),   v_age = c(0, 15, 24, 36),   v_type = c(\"Interstate\", \"International\", \"Total\"),   age_groups = TRUE )"},{"path":"https://padeci.github.io/demogmx/reference/get_migration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load migration data — get_migration","text":"v_state State(s) desired data. v_year Year(s) desired data. Must numbers 1970 2050. v_sex Vector selecting sex. Options: Female, Male Total. v_age Specifies age bins aggregate return. v_type Indicates whether type migration include. can Interstate migration, International migration Total migration. age_groups Specifies whether aggregate output age groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_migration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load migration data — get_migration","text":"demographic dataset containing selected year, state, state code (CVE_GEO), age (age group, age_groups = TRUE), type migration, number emigrants, number immigrants, migration balance (immigrants - emigrants), rate emigration immigration, respectively.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_migration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load migration data — get_migration","text":"","code":"get_migration(v_state = c(\"Yucatan\", \"Sonora\"),               v_year = 2015,               v_sex = \"Total\",               v_age = c(0, 25, 35, 45),               v_type = \"International\",               age_groups = TRUE) #> # A tibble: 8 x 12 #>    year state   CVE_GEO sex   age_group type  emigrants immigrants net_migration #>   <int> <chr>     <dbl> <chr> <fct>     <chr>     <dbl>      <dbl>         <dbl> #> 1  2015 Sonora       26 Total [0,25]    Inte~      2137       2282           145 #> 2  2015 Sonora       26 Total (25,35]   Inte~       982       1258           276 #> 3  2015 Sonora       26 Total (35,45]   Inte~       519        833           314 #> 4  2015 Sonora       26 Total (45,Inf]  Inte~       636        877           241 #> 5  2015 Yucatan      31 Total [0,25]    Inte~       951        466          -485 #> 6  2015 Yucatan      31 Total (25,35]   Inte~       437        260          -177 #> 7  2015 Yucatan      31 Total (35,45]   Inte~       232        172           -60 #> 8  2015 Yucatan      31 Total (45,Inf]  Inte~       284        179          -105 #> # ... with 3 more variables: em_rate <dbl>, im_rate <dbl>, nm_rate <dbl>  get_migration(v_state = \"Mexico City\",               v_year = c(2000, 2010),               v_sex = \"Female\",               v_age = c(0, 15, 35, 45, 75),               v_type = c(\"Interstate\", \"International\", \"Total\"),               age_groups = FALSE) #> # A tibble: 30 x 12 #>     year state      CVE_GEO sex     age emigrants immigrants type  net_migration #>    <int> <chr>        <dbl> <chr> <int>     <dbl>      <dbl> <chr>         <dbl> #>  1  2000 Mexico Ci~       9 Fema~     0       160         77 Inte~           -83 #>  2  2000 Mexico Ci~       9 Fema~     0      4048        746 Inte~         -3302 #>  3  2000 Mexico Ci~       9 Fema~     0      4209        823 Total         -3386 #>  4  2000 Mexico Ci~       9 Fema~    15       408         49 Inte~          -359 #>  5  2000 Mexico Ci~       9 Fema~    15       859        783 Inte~           -76 #>  6  2000 Mexico Ci~       9 Fema~    15      1267        831 Total          -436 #>  7  2000 Mexico Ci~       9 Fema~    35       101         84 Inte~           -17 #>  8  2000 Mexico Ci~       9 Fema~    35       985        291 Inte~          -694 #>  9  2000 Mexico Ci~       9 Fema~    35      1086        375 Total          -711 #> 10  2000 Mexico Ci~       9 Fema~    45        42         47 Inte~             5 #> # ... with 20 more rows, and 3 more variables: em_rate <dbl>, im_rate <dbl>, #> #   nm_rate <dbl>"},{"path":"https://padeci.github.io/demogmx/reference/get_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Load population data disaggregated by year, state, sex and age. — get_population","title":"Load population data disaggregated by year, state, sex and age. — get_population","text":"get_population function allows user get demographic dataset regarding population population proportions based given parameters.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load population data disaggregated by year, state, sex and age. — get_population","text":"","code":"get_population(   v_state = \"National\",   v_year = \"2021\",   v_sex = \"Total\",   v_age = c(\"0\", \"5\", \"15\", \"25\", \"45\", \"55\", \"65\", \"70\"),   age_groups = TRUE )"},{"path":"https://padeci.github.io/demogmx/reference/get_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load population data disaggregated by year, state, sex and age. — get_population","text":"v_state State(s) desired data. v_year Year(s) desired data. Must numbers 1970 2050. v_sex Vector selecting sex. Options: Female, Male Total. v_age Specifies age bins aggregate return. age_groups Specifies whether aggregate output age groups.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load population data disaggregated by year, state, sex and age. — get_population","text":"demographic dataset indicating year, state, state code (CVE_GEO), age (group, age_groups = TRUE), population proportion row, relation selected year sex.","code":""},{"path":"https://padeci.github.io/demogmx/reference/get_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load population data disaggregated by year, state, sex and age. — get_population","text":"","code":"get_population(v_state =  \"Chiapas\",                v_year = 2015,                v_sex = \"Total\",                v_age = c(0, 15, 45, 75),                age_groups = FALSE) #> # A tibble: 4 x 7 #>    year state   CVE_GEO sex     age population proportion #>   <int> <chr>     <dbl> <chr> <int>      <dbl>      <dbl> #> 1  2015 Chiapas       7 Total     0     126786     0.422  #> 2  2015 Chiapas       7 Total    15     108299     0.360  #> 3  2015 Chiapas       7 Total    45      54114     0.180  #> 4  2015 Chiapas       7 Total    75      11296     0.0376  get_population(v_state = c(\"Aguascalientes\", \"Campeche\"),                v_year = c(2010, 2021),                v_sex = \"Male\",                v_age = c(0, 15, 45, 75),                age_groups = TRUE) #> # A tibble: 16 x 7 #>     year state          CVE_GEO sex   age_group population proportion #>    <int> <chr>            <dbl> <chr> <fct>          <dbl>      <dbl> #>  1  2010 Aguascalientes       1 Male  [0,15]        205735     0.355  #>  2  2010 Aguascalientes       1 Male  (15,45]       268296     0.463  #>  3  2010 Aguascalientes       1 Male  (45,75]        96275     0.166  #>  4  2010 Aguascalientes       1 Male  (75,Inf]        8968     0.0155 #>  5  2010 Campeche             4 Male  [0,15]        133246     0.324  #>  6  2010 Campeche             4 Male  (15,45]       194892     0.474  #>  7  2010 Campeche             4 Male  (45,75]        74696     0.182  #>  8  2010 Campeche             4 Male  (75,Inf]        7940     0.0193 #>  9  2021 Aguascalientes       1 Male  [0,15]        211029     0.297  #> 10  2021 Aguascalientes       1 Male  (15,45]       340069     0.478  #> 11  2021 Aguascalientes       1 Male  (45,75]       147236     0.207  #> 12  2021 Aguascalientes       1 Male  (75,Inf]       12957     0.0182 #> 13  2021 Campeche             4 Male  [0,15]        143179     0.287  #> 14  2021 Campeche             4 Male  (15,45]       237191     0.476  #> 15  2021 Campeche             4 Male  (45,75]       107559     0.216  #> 16  2021 Campeche             4 Male  (75,Inf]       10764     0.0216"}]
